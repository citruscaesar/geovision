project_name: inria 
run_name: unet_resnet50_on_inria 
random_seed: 42

trainer_params:
  max_epochs: 10
  strategy: 'ddp'
  devices: 4
  precision: '16-mixed' 
  num_sanity_val_steps: 0
  use_distributed_sampler: True

log_params:
  log_to_h5: False 
  log_to_wandb: False 
  log_to_csv: False 
  wandb_init_params:
    tags: ["inria", "resnet50"]
    notes: "testing building segmentation" 
  log_every_n_steps: 10 
  log_every_n_epochs: 1
  log_models: True 

dataset_name: inria.Inria_Building_Segmentation_HDF5
dataset_params:
  df: null 
  tabular_sampler_name: "stratified" 
  tabular_sampler_params:
    val_frac: 0.15 
    test_frac: 0.15
    split_on: location 
  spatial_sampler_name: null 
  spatial_sampler_params:
    tile_size: 256 
    tile_stride: 200 
  spectral_sampler_name: null 
  spectral_sampler_params: null
  batch_transform_name: null 
  batch_transform_params: 
    alpha: 0.4
  transforms: |
    from torch import float32
    from torchvision.transforms import v2 as T
    image_pre = T.Compose([
      T.ToImage(),
      T.ToDtype(float32, scale = True),
    ])
    target_pre = T.Compose([
      T.ToImage(),
      T.ToDtype(float32, scale = False),
    ])
    train_aug = T.Compose([
      T.RandomVerticalFlip(0.5),
      T.RandomHorizontalFlip(0.5),
    ])
    eval_aug = T.Identity()
  
dataloader_params:
  # effective batch size = batch_size // gradient_accumulation
  batch_size: 64 
  gradient_accumulation: 1
  num_workers: 16 
  persistent_workers: False 
  pin_memory: True 
  prefetch_factor: 8 

model_name: ClassificationModule 
model_params:
  ckpt_path: null
  encoder: geovision.models.resnet.ResNetFeatureExtractor
  encoder_params:
    layers: 50 
    residual_block_name: bottleneck 
    weights_init: torchgeo 
    weights_param: ResNet50_Weights.FMOW_RGB_GASSL
  decoder: geovision.models.unet.UNetDecoder
  decoder_params:
    upsampling: bilinear
    central_block: ResidualBlock
    central_block_params:
      residual_path: basic 
      identity_path: identity 
    conv_block: ResidualBlock
    conv_block_params:
      residual_path: basic 
      identity_path: identity
    
metric_name: JaccardIndex
metric_params: null
 
criterion_name: CrossEntropyLoss
criterion_params:
  reduction: mean

optimizer_name: SGD 
optimizer_params:
  lr: 5.0e-6
  momentum: 0.9
  weight_decay: 5.0e-4

warmup_scheduler_name: LinearLR 
warmup_scheduler_params:
  start_factor: 0.001 
  end_factor: 0.9 
  total_iters: 200 
warmup_steps: 200 

scheduler_name: LinearLR 
scheduler_params:
  start_factor: 1.0 
  end_factor: 0.001 
  total_iters: 5

scheduler_config_params:
  interval: epoch 
  frequency: 3
  monitor: train_loss_epoch 